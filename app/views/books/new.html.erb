
<%= render "books/form" %>

  <script>
    // Fonction pour récupérer les données du formulaire
    function getFormData() {
      var formData = new FormData();

      for (var i = 0; i < document.forms[0].elements.length; i++) {
        var element = document.forms[0].elements[i];

        // Vérifier si le champ est requis
        if (element.required) {
          if (element.value === "") {
            alert("Le champ " + element.name + " est requis.");
            return false;
          }
        }

        // Ajouter la valeur du champ au formulaire
        formData.append(element.name, element.value);
      }

      return formData;
    }

    // Fonction pour envoyer les données à la base de données
    function sendData() {
  var formData = new FormData(document.forms[0]);

  // Créer une requête HTTP POST
  var xhr = new XMLHttpRequest();
  xhr.open("POST", "/books", true);

  // Envoyer les données à la base de données
  xhr.send(formData);

  // Gérer la réponse de la base de données
  xhr.onload = function() {
    if (xhr.status === 200) {
      // Le livre a été ajouté avec succès
      alert("Le livre a été ajouté avec succès.");
    } else {
      // Une erreur s'est produite
      alert("Une erreur s'est produite lors de l'ajout du livre.");
    }
  };
}

</script>

<% if @book.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(@book.errors.count, "error") %> prohibited this book from being saved:</h2>
    <ul>
      <% @book.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>

